
@rendermode InteractiveServer
@using System
@using System.Threading



@if (showMyToast)
{
<div class="toast-container position-fixed bottom-0 end-0 p-3">
  <div id="liveToast" class="toast show"    role="alert" aria-live="assertive" aria-atomic="true">
    <div class="toast-header">
      <img src="/favicon.png" class="rounded me-2" alt="...">
      <strong class="me-auto">Bootstrap</strong>
      <small>4 secs ago</small>
      <button type="button"  class="btn btn-outline-secondary border-0"  data-dismiss="modal" aria-label="Close" @onclick="CloseToastComponent">                    
                    <span style="font-size: 22px; font-weight: bold;" aria-hidden="true">&times;</span>                
                </button>
      @* <button type="button" class="btn-close" @onclick="CloseToast" data-bs-dismiss="toast" aria-label="Close"></button> *@
    </div>
    <div class="toast-body">
      Hello, world! This is a toast message. autoclose in 2 seconds.

    </div>
  </div>
</div>
}

@code {
      private bool showMyToast = false;
      private Timer? myTimer;

      public void ShowToastComponent()
      {
        showMyToast = true;
    
         myTimer = new Timer(CloseToastComponent, null, 2000, Timeout.Infinite);
       } 
       
      private void CloseToastComponent(object? state)
      {
        showMyToast = false;
        InvokeAsync(StateHasChanged);
        myTimer?.Dispose();        
      }      

      

}